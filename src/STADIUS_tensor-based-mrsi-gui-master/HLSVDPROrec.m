   function [filtersig,freq,damp,ampl,phas,SV] = HLSVDPROrec(signal,Kest,fsampl,time,M,freqrange) %time in s, frequency range in Hz % freqrange = matrix nx2 where n is the number of intervals where the peaks% should be removed% Kest = estimate of the number of peaks (i.e. model order)% fsampl = sampling frequency in Hz% adding a little bit of noise makes the algorithm stable in the case of noiseless% signals (such as simulated metabolites)smallnoise = 1e-6*norm(signal)*randn(size(signal)) + j*1e-6*norm(signal)*randn(size(signal));smallnoise = 0; % comment this out if you are filtering noiseless signals[freq,damp,ampl,phas,s]= HLSVDPRO(signal+smallnoise,signal+smallnoise,Kest,fsampl,time,M);for i=1:size(freqrange,1)freqbound1 = freqrange(i,1);freqbound2 = freqrange(i,2);[signal]=prfilter(signal,time,freq,damp,ampl,phas,freqbound1,freqbound2);endfiltersig = signal;if nargout < 6    returnelse    SV = s;end